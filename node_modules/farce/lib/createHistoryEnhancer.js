'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = createHistoryEnhancer;

var _redux = require('redux');

var _ActionTypes = require('./ActionTypes');

var _ActionTypes2 = _interopRequireDefault(_ActionTypes);

var _createHistoryMiddleware = require('./createHistoryMiddleware');

var _createHistoryMiddleware2 = _interopRequireDefault(_createHistoryMiddleware);

var _createTransitionHookMiddleware = require('./createTransitionHookMiddleware');

var _createTransitionHookMiddleware2 = _interopRequireDefault(_createTransitionHookMiddleware);

var _ensureLocationMiddleware = require('./ensureLocationMiddleware');

var _ensureLocationMiddleware2 = _interopRequireDefault(_ensureLocationMiddleware);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createHref(location) {
  return {
    type: _ActionTypes2.default.CREATE_HREF,
    payload: location
  };
}

function createLocation(location) {
  return {
    type: _ActionTypes2.default.CREATE_LOCATION,
    payload: location
  };
}

function createHistoryEnhancer(_ref) {
  var protocol = _ref.protocol,
      _ref$middlewares = _ref.middlewares,
      middlewares = _ref$middlewares === undefined ? [] : _ref$middlewares,
      useBeforeUnload = _ref.useBeforeUnload;

  return function historyEnhancer(createStore) {
    return function () {
      var transitionHookMiddleware = (0, _createTransitionHookMiddleware2.default)({
        useBeforeUnload: useBeforeUnload
      });

      var middlewareEnhancer = _redux.applyMiddleware.apply(undefined, [_ensureLocationMiddleware2.default, transitionHookMiddleware].concat(middlewares, [(0, _createHistoryMiddleware2.default)(protocol)], [].concat(middlewares).reverse(), [transitionHookMiddleware]));

      var store = middlewareEnhancer(createStore).apply(undefined, arguments);
      var boundActionCreators = (0, _redux.bindActionCreators)({ createHref: createHref, createLocation: createLocation }, store.dispatch);

      return _extends({}, store, {
        farce: _extends({}, boundActionCreators, {
          addTransitionHook: transitionHookMiddleware.addHook
        })
      });
    };
  };
}
module.exports = exports['default'];